[{"/home/kage/TEST/treatment_selector_frontend/src/index.js":"1","/home/kage/TEST/treatment_selector_frontend/src/pages/HomePage/HomePage.js":"2","/home/kage/TEST/treatment_selector_frontend/src/pages/App.js":"3","/home/kage/TEST/treatment_selector_frontend/src/pages/SideBar/SideBar.js":"4","/home/kage/TEST/treatment_selector_frontend/src/services/GqlConnection.js":"5","/home/kage/TEST/treatment_selector_frontend/src/services/queries/TreatmentCategoriesQueries.js":"6","/home/kage/TEST/treatment_selector_frontend/src/pages/Patient/ListTreatmentCategory.js":"7","/home/kage/TEST/treatment_selector_frontend/src/pages/Patient/ListTreatment.js":"8","/home/kage/TEST/treatment_selector_frontend/src/pages/Patient/Components/TreatmentCategory.js":"9","/home/kage/TEST/treatment_selector_frontend/src/pages/Patient/Components/Treatment.js":"10","/home/kage/TEST/treatment_selector_frontend/src/pages/Patient/Components/FormConfirmed.js":"11","/home/kage/TEST/treatment_selector_frontend/src/pages/Patient/Components/CreatePatient.js":"12","/home/kage/TEST/treatment_selector_frontend/src/services/mutations/MutationsPatient.js":"13","/home/kage/TEST/treatment_selector_frontend/src/pages/Dashboard/Dashboard.js":"14","/home/kage/TEST/treatment_selector_frontend/src/pages/Dashboard/Components/TreatmentCategory.js":"15","/home/kage/TEST/treatment_selector_frontend/src/pages/Dashboard/CreateTreatmentCategory.js":"16","/home/kage/TEST/treatment_selector_frontend/src/pages/Dashboard/CreateTreatment.js":"17","/home/kage/TEST/treatment_selector_frontend/src/services/mutations/MutationsTreatment.js":"18","/home/kage/TEST/treatment_selector_frontend/src/services/mutations/MutationsTreatmentCategory.js":"19"},{"size":299,"mtime":1607695384232,"results":"20","hashOfConfig":"21"},{"size":650,"mtime":1607697273023,"results":"22","hashOfConfig":"21"},{"size":1630,"mtime":1607696366740,"results":"23","hashOfConfig":"21"},{"size":859,"mtime":1607696973631,"results":"24","hashOfConfig":"21"},{"size":207,"mtime":1607674209313,"results":"25","hashOfConfig":"21"},{"size":324,"mtime":1607674209317,"results":"26","hashOfConfig":"21"},{"size":1320,"mtime":1607689337272,"results":"27","hashOfConfig":"21"},{"size":1505,"mtime":1607687844808,"results":"28","hashOfConfig":"21"},{"size":246,"mtime":1607689160700,"results":"29","hashOfConfig":"21"},{"size":224,"mtime":1607695672828,"results":"30","hashOfConfig":"21"},{"size":372,"mtime":1607674209293,"results":"31","hashOfConfig":"21"},{"size":1346,"mtime":1607695842468,"results":"32","hashOfConfig":"21"},{"size":289,"mtime":1607674209313,"results":"33","hashOfConfig":"21"},{"size":175,"mtime":1607675510172,"results":"34","hashOfConfig":"21"},{"size":0,"mtime":1607675438860,"results":"35","hashOfConfig":"21"},{"size":1519,"mtime":1607688298324,"results":"36","hashOfConfig":"21"},{"size":1498,"mtime":1607687814140,"results":"37","hashOfConfig":"21"},{"size":969,"mtime":1607687348320,"results":"38","hashOfConfig":"21"},{"size":1058,"mtime":1607674209317,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"dqjdif",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/kage/TEST/treatment_selector_frontend/src/index.js",[],["86","87"],"/home/kage/TEST/treatment_selector_frontend/src/pages/HomePage/HomePage.js",[],"/home/kage/TEST/treatment_selector_frontend/src/pages/App.js",["88"],"import React from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\n\nimport HomePage from './HomePage/HomePage';\nimport SideBar from './SideBar/SideBar';\nimport Dashboard from './Dashboard/Dashboard';\n\nimport ListTreatmentCategory from './Patient/ListTreatmentCategory';\nimport ListTreatment from './Patient/ListTreatment';\n\nclass App extends React.Component {\n\tstate = {\n\t\tselectedTreatmentCategory: null\n\t}\n\n\tselectTreatmentCategory = (treatmentCategory) => {\n\t\tthis.setState({selectedTreatmentCategory: treatmentCategory})\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<BrowserRouter>\n\t\t\t\t<nav >\n\t\t\t\t\t<SideBar selectTreatmentCategory={this.selectTreatmentCategory} />\n\t\t\t\t</nav>\n\t\t\t\t<div id=\"main-div\" className=\"d-flex flex-wrap justify-content-center align-items-center\" >\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/patient\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.state.selectedTreatmentCategory ?\n\t\t\t\t\t\t\t\t<ListTreatment pathName=\"/patient\" treatmentCategory={this.state.selectedTreatmentCategory} selectTreatmentCategory={this.selectTreatmentCategory} />:\n\t\t\t\t\t\t\t\t<ListTreatmentCategory selectTreatmentCategory={this.selectTreatmentCategory} />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/doctor\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.state.selectedTreatmentCategory ?\n\t\t\t\t\t\t\t\t<ListTreatment pathName=\"/doctor\" treatmentCategory={this.state.selectedTreatmentCategory} selectTreatmentCategory={this.selectTreatmentCategory} />:\n\t\t\t\t\t\t\t\t<ListTreatmentCategory selectTreatmentCategory={this.selectTreatmentCategory} />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/\" component={HomePage} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</BrowserRouter>\n\t\t)\n\t}\n}\n\nexport default App\n","/home/kage/TEST/treatment_selector_frontend/src/pages/SideBar/SideBar.js",["89","90","91","92"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { FaClinicMedical, FaUserInjured, FaUserMd, FaListAlt, FaCheckSquare, FaPlusSquare, FaTrash} from 'react-icons/fa';\nimport './SideBar.css';\n\nconst SideBar = ({selectTreatmentCategory}) => (\n\t<div id=\"my-side-bar\" className=\"btn-group-vertical\">\n\t\t<div className=\"my-icones\"><NavLink className=\"btn\" to=\"/\"><FaClinicMedical /></NavLink></div>\n\t\t<div className=\"my-icones\"><NavLink className=\"btn\" to=\"/patient\" onClick={(e)=>selectTreatmentCategory(null)}><FaUserInjured /></NavLink></div>\n\t\t<div className=\"my-icones\"><NavLink className=\"btn\" to=\"/doctor\" onClick={(e)=>selectTreatmentCategory(null)}><FaUserMd /></NavLink></div>\n\t</div>\n)\n\nexport default SideBar\n\n// selectTreatmentCategory.bind(this,null)\n// <FaListAlt />\n// <FaCheckSquare />\n// <FaPlusSquare />\n// <FaTrash />\n","/home/kage/TEST/treatment_selector_frontend/src/services/GqlConnection.js",[],"/home/kage/TEST/treatment_selector_frontend/src/services/queries/TreatmentCategoriesQueries.js",[],"/home/kage/TEST/treatment_selector_frontend/src/pages/Patient/ListTreatmentCategory.js",["93","94"],"import React, { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { TREATMENT_CATEGORIES } from '../../services/queries/TreatmentCategoriesQueries'\nimport { FaPlusSquare } from 'react-icons/fa'\n\nimport TreatmentCategory from './Components/TreatmentCategory';\nimport CreateTreatmentCategory from '../Dashboard/CreateTreatmentCategory'\n\nfunction ListTreatmentCategory({selectTreatmentCategory}){\n\n\tconst [path, setPath] = useState(window.location.pathname);\n\tconst [addTC, setAddTC] = useState(false);\n\t// const [dataList, setDataList] = useState(null);\n\tlet addTCategory = (value) => {\n\t\tsetAddTC(value)\n\t}\n\n\tconst {loading, error, data} = useQuery(TREATMENT_CATEGORIES);\n\n\tif (loading) return 'Loading ...';\n\tif (error) return `Error ${error.message}`;\n\t\n\treturn(\n\t\t<div>\n\t\t\t{\n\t\t\t\tdata.treatmentCategories.map(treatmentCategory => (\n\t\t\t\t\t<div key={treatmentCategory.id} onClick={selectTreatmentCategory.bind(this,treatmentCategory)} >\n\t\t\t\t\t\t<TreatmentCategory treatmentCategory={treatmentCategory} />\n\t\t\t\t\t\t<hr />\n\t\t\t\t\t</div>\n\t\t\t\t))\n\t\t\t}\n\t\t\t{\n\t\t\t\tpath=='/doctor' ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddTC ? <CreateTreatmentCategory addTCategory={addTCategory}/> : <FaPlusSquare onClick={() => setAddTC(true)}/>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t) : null\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default ListTreatmentCategory\n","/home/kage/TEST/treatment_selector_frontend/src/pages/Patient/ListTreatment.js",["95"],"import React from 'react';\nimport { FaPlusSquare } from 'react-icons/fa'\n\nimport Treatment from './Components/Treatment'\nimport FormConfirmed from './Components/FormConfirmed'\n\nimport CreateTreatment from '../Dashboard/CreateTreatment'\n\nclass ListTreatment extends React.Component {\n\tstate = {\n\t\ttreatment: null,\n\t\tpath: window.location.pathname,\n\t\taddTC: false,\n\t}\n\n\taddTreatment = () => {\n\t\tthis.setState(prevState => ({addTC: !prevState.addTC}))\n\t}\n\n\tcanceledChoice = (value) => {\n\t\tthis.setState({treatment: value})\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{this.state.treatment?\n\t\t\t\t<FormConfirmed treatment={this.state.treatment} canceledChoice={this.canceledChoice} />:\n\t\t\t\t<div>\n\t\t\t\t\t<h2>{this.props.treatmentCategory.nameEn}</h2>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.props.treatmentCategory.treatments.map(treatment => (\n\t\t\t\t\t\t\t<React.Fragment key={treatment.id}>\n\t\t\t\t\t\t\t\t<div onClick={ this.state.path === '/doctor' ? null :\n\t\t\t\t\t\t\t\te => this.canceledChoice(treatment)}>\n\t\t\t\t\t\t\t\t\t<Treatment treatment={treatment} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t\t<button onClick={this.props.selectTreatmentCategory.bind(this,null)}>\n\t\t\t\t\t\tBack\n\t\t\t\t\t</button>\n\t\t\t\t</div>}\n\t\t\t\t{\n\t\t\t\t\tthis.state.path=='/doctor' ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.state.addTC ? <CreateTreatment treatmentCategory={this.props.treatmentCategory} addTreatment={this.addTreatment}/> : <FaPlusSquare onClick={() => this.addTreatment()}/>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t) : null\n\t\t\t\t}\n\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nexport default ListTreatment\n","/home/kage/TEST/treatment_selector_frontend/src/pages/Patient/Components/TreatmentCategory.js",[],"/home/kage/TEST/treatment_selector_frontend/src/pages/Patient/Components/Treatment.js",[],"/home/kage/TEST/treatment_selector_frontend/src/pages/Patient/Components/FormConfirmed.js",[],"/home/kage/TEST/treatment_selector_frontend/src/pages/Patient/Components/CreatePatient.js",[],"/home/kage/TEST/treatment_selector_frontend/src/services/mutations/MutationsPatient.js",[],["96","97"],"/home/kage/TEST/treatment_selector_frontend/src/pages/Dashboard/Dashboard.js",[],"/home/kage/TEST/treatment_selector_frontend/src/pages/Dashboard/Components/TreatmentCategory.js",[],"/home/kage/TEST/treatment_selector_frontend/src/pages/Dashboard/CreateTreatmentCategory.js",["98"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { CREATE_TREATMENT_CATEGORY, UPDATE_TREATMENT_CATEGORY } from '../../services/mutations/MutationsTreatmentCategory';\n\nfunction CreateTreatmentCategory({treatmentCategory,addTCategory}) {\n\tconst [ createTreatmentCategory, { data: mutationsData, loading: mutationLoading, error: mutationError }] = useMutation(CREATE_TREATMENT_CATEGORY);\n\n\tconst [nameEn,setNameEn] = useState('')\n\tconst [nameFr,setNameFr] = useState('')\n\tconst [nameMg,setNameMg] = useState('')\n\t// const [treatmentCategoryId,setTreatmentCategoryId] = useState(treatmentCategory.id)\n\n\tlet createPatientMutation = (e) => {\n\t\te.preventDefault();\n\t\tcreateTreatmentCategory({ variables: { nameEn: nameEn, nameFr: nameFr, nameMg: nameMg }});\n\t\taddTCategory(false);\n\t}\n\n\treturn(\n\t\t<div>\n\t\t\t<form onSubmit={ (e) => { createPatientMutation(e) }}>\n\t\t\t\t<input type=\"text\" id=\"nameEn\" name=\"nameEn\" defaultValue={nameEn} onChange={(e)=>{setNameEn(e.target.value)}}/>\n\t\t\t\t<input type=\"text\" id=\"nameFr\" name=\"nameFr\" defaultValue={nameFr} onChange={(e)=>{setNameFr(e.target.value)}}/>\n\t\t\t\t<input type=\"text\" id=\"nameMg\" name=\"nameMg\" defaultValue={nameMg} onChange={(e)=>{setNameMg(e.target.value)}}/>\n\t\t\t\t<button type=\"submit\">Confirm</button>\n\t\t\t</form>\n\t\t\t{mutationLoading && <p>Loading...</p>}\n\t        {mutationError && <p>Error: ( Please try again)</p>}\n\t        {mutationsData && <p>Donné sauvegardé</p>}\n\t    </div>\n\t)\n\n}\n\nexport default CreateTreatmentCategory\n","/home/kage/TEST/treatment_selector_frontend/src/pages/Dashboard/CreateTreatment.js",["99","100"],"import React, { useState } from 'react';\n\nimport { useMutation } from '@apollo/client';\n\nimport { CREATE_TREATMENT, UPDATE_TREATMENT } from '../../services/mutations/MutationsTreatment';\n\nfunction CreateTreatment({treatmentCategory,addTreatment}) {\n\tconst [ createTreatment, { data: mutationsData, loading: mutationLoading, error: mutationError }] = useMutation(CREATE_TREATMENT);\n\n\tconst [nameEn,setNameEn] = useState('')\n\tconst [nameFr,setNameFr] = useState('')\n\tconst [nameMg,setNameMg] = useState('')\n\tconst [treatmentCategoryId,setTreatmentCategoryId] = useState(treatmentCategory.id)\n\n\tlet createPatientMutation = (e) => {\n\t\te.preventDefault();\n\t\tcreateTreatment({ variables: { nameEn: nameEn, nameFr: nameFr, nameMg: nameMg, treatmentCategoryId: parseInt(treatmentCategoryId) }});\n\t\taddTreatment();\n\t}\n\n\treturn(\n\t\t<div>\n\t\t\t<form onSubmit={ (e) => { createPatientMutation(e) }}>\n\t\t\t\t<input type=\"text\" id=\"nameEn\" name=\"nameEn\" defaultValue={nameEn} onChange={(e)=>{setNameEn(e.target.value)}}/>\n\t\t\t\t<input type=\"text\" id=\"nameFr\" name=\"nameFr\" defaultValue={nameFr} onChange={(e)=>{setNameFr(e.target.value)}}/>\n\t\t\t\t<input type=\"text\" id=\"nameMg\" name=\"nameMg\" defaultValue={nameMg} onChange={(e)=>{setNameMg(e.target.value)}}/>\n\t\t\t\t<button type=\"submit\">Confirm</button>\n\t\t\t</form>\n\t\t\t{mutationLoading && <p>Loading...</p>}\n\t        {mutationError && <p>Error: ( Please try again)</p>}\n\t        {mutationsData && <p>Donné sauvegardé</p>}\n\t    </div>\n\t)\n\n}\n\nexport default CreateTreatment\n","/home/kage/TEST/treatment_selector_frontend/src/services/mutations/MutationsTreatment.js",[],"/home/kage/TEST/treatment_selector_frontend/src/services/mutations/MutationsTreatmentCategory.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":6,"column":8,"nodeType":"107","messageId":"108","endLine":6,"endColumn":17},{"ruleId":"105","severity":1,"message":"109","line":3,"column":52,"nodeType":"107","messageId":"108","endLine":3,"endColumn":61},{"ruleId":"105","severity":1,"message":"110","line":3,"column":63,"nodeType":"107","messageId":"108","endLine":3,"endColumn":76},{"ruleId":"105","severity":1,"message":"111","line":3,"column":78,"nodeType":"107","messageId":"108","endLine":3,"endColumn":90},{"ruleId":"105","severity":1,"message":"112","line":3,"column":92,"nodeType":"107","messageId":"108","endLine":3,"endColumn":99},{"ruleId":"105","severity":1,"message":"113","line":11,"column":15,"nodeType":"107","messageId":"108","endLine":11,"endColumn":22},{"ruleId":"114","severity":1,"message":"115","line":34,"column":9,"nodeType":"116","messageId":"117","endLine":34,"endColumn":11},{"ruleId":"114","severity":1,"message":"115","line":46,"column":21,"nodeType":"116","messageId":"117","endLine":46,"endColumn":23},{"ruleId":"101","replacedBy":"118"},{"ruleId":"103","replacedBy":"119"},{"ruleId":"105","severity":1,"message":"120","line":3,"column":37,"nodeType":"107","messageId":"108","endLine":3,"endColumn":62},{"ruleId":"105","severity":1,"message":"121","line":5,"column":28,"nodeType":"107","messageId":"108","endLine":5,"endColumn":44},{"ruleId":"105","severity":1,"message":"122","line":13,"column":29,"nodeType":"107","messageId":"108","endLine":13,"endColumn":51},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'Dashboard' is defined but never used.","Identifier","unusedVar","'FaListAlt' is defined but never used.","'FaCheckSquare' is defined but never used.","'FaPlusSquare' is defined but never used.","'FaTrash' is defined but never used.","'setPath' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["123"],["124"],"'UPDATE_TREATMENT_CATEGORY' is defined but never used.","'UPDATE_TREATMENT' is defined but never used.","'setTreatmentCategoryId' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]